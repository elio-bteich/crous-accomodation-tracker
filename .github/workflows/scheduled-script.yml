name: Manage JSON Availability

on:
  push:
    branches:
      - main
  schedule:
    - cron: "*/5 * * * *"  # toutes les 5 minutes
  workflow_dispatch:  # permet de déclencher manuellement le workflow

jobs:
  init-json:
    if: github.event_name == 'push'  # ne s'exécute que sur push
    runs-on: ubuntu-latest
    env:
      DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Run init_dispo.py script
        run: python3 init_dispo.py

      - name: Commit and push JSON if changed
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add etat_disponibilite.json
          if ! git diff --cached --quiet; then
            git commit -m "Initialize etat_disponibilite.json [skip ci]"
            git push
          else
            echo "No changes to commit"
          fi

  update-json:
    runs-on: ubuntu-latest
    env:
      DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Run your update script
        run: python3 residence_crous_scrap_v2.py

      - name: Commit and push JSON if changed
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add etat_disponibilite.json
          if ! git diff --cached --quiet; then
            git commit -m "Update etat_disponibilite.json [skip ci]"
            git push
          else
            echo "No changes to commit"
          fi
